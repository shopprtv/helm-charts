{{- if ne "cronjob" .Values.namespace  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ printf "sid-%s" .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    env: {{ .Values.environment }}
spec:
  revisionHistoryLimit: 3
  {{- if (.Values.suspended)}}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      env: {{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        env: {{ .Values.environment }}
    spec:
      serviceAccountName: {{ .Values.name }}
      terminationGracePeriodSeconds: 80
      imagePullSecrets:
        - name: regcred
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.image.command }}
        command: [{{ .Values.image.command | quote }}]
        {{- end }}
        {{- if .Values.image.args }}
        args:
        {{- range .Values.image.args }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.image.containerPort }}
        ports:
          - name: http
            containerPort: {{ .Values.image.containerPort }}
            protocol: TCP
        {{- end }}
        envFrom:
          {{- if .Values.env }}
          {{- if .Values.env.public }}
          - configMapRef:
              name: {{ $.Values.name }}
          {{- end }}
          {{- if .Values.env.private }}
          - secretRef:
              name: {{ $.Values.name }}
          {{- end }}
          {{- end }}
        {{- if .Values.livenessProbe }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpPath | default "/" }}
            port: http
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 10 }}
          successThreshold: {{ .Values.livenessProbe.successThreshold | default 1 }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 3 }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 3 }}
        {{- end }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpPath | default "/health-check" }}
            port: http
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 10 }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 5 }}
        {{- end }}
        {{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}
{{- end}}
